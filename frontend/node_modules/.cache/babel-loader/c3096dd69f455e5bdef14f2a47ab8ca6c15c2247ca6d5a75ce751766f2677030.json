{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\ECOMMERCE\\\\frontend\\\\src\\\\screens\\\\ShippingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { saveShippingAdreess } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShippingScreen() {\n  _s();\n  const cart = userSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAdreess({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter city\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter postal code\",\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter country\",\n          value: country,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(ShippingScreen, \"IstdY3GcowNbJHARNYj1GHQFz/U=\", false, function () {\n  return [useDispatch];\n});\n_c = ShippingScreen;\nexport default ShippingScreen;\nvar _c;\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","useDispatch","useSelector","FormContainer","saveShippingAdreess","jsxDEV","_jsxDEV","ShippingScreen","_s","cart","userSelector","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","variant","_c","$RefreshReg$"],"sources":["D:/Desktop/ECOMMERCE/frontend/src/screens/ShippingScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAdreess } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen() {\r\n    const cart = userSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n    const dispatch = useDispatch();\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAdreess({ address, city, postalCode, country }));\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter address' \r\n                        value={address} \r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter city' \r\n                        value={city} \r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter postal code' \r\n                        value={postalCode} \r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                        type='text'\r\n                        placeholder='Enter country' \r\n                        value={country} \r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}