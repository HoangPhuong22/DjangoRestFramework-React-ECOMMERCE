{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\ECOMMERCE\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetail, updateUserProfile } from '../actions/userActions';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { userUpdateProfileSlice } from '../reducers/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileScreen() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const userDetail = useSelector(state => state.userDetail);\n  const {\n    loading,\n    user,\n    error\n  } = userDetail;\n  const userLogin = useSelector(state => state.userLogin);\n  const userInfo = userLogin.userInfo;\n  const userUpdateProfile = useSelector(state => state.userUpdate);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      navigation('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch(userUpdateProfileSlice.actions.Reset());\n        dispatch(getUserDetail('profile'));\n      } else {\n        console.log(user.name, user.email);\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, navigation, userInfo, user, success]);\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      setMessage('');\n      dispatch(updateUserProfile({\n        'id': user.id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n    }\n  };\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\n  const handleUpdateProfileClick = () => {\n    setShowPasswordFields(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfileScreen, \"3FPpsUvdsQqk/FLI9wSWysC8Sz8=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","getUserDetail","updateUserProfile","useLocation","useNavigate","userUpdateProfileSlice","jsxDEV","_jsxDEV","ProfileScreen","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","navigation","dispatch","userDetail","state","loading","user","error","userLogin","userInfo","userUpdateProfile","userUpdate","success","actions","Reset","console","log","submitHandler","e","preventDefault","id","showPasswordFields","setShowPasswordFields","handleUpdateProfileClick","children","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["D:/Desktop/ECOMMERCE/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetail, updateUserProfile } from '../actions/userActions';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { userUpdateProfileSlice } from '../reducers/userSlice';\r\n\r\nfunction ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigation = useNavigate();\r\n    const dispatch = useDispatch();\r\n    \r\n    const userDetail = useSelector(state => state.userDetail);\r\n    const {loading, user, error} = userDetail;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const userInfo = userLogin.userInfo;\r\n    const userUpdateProfile = useSelector(state => state.userUpdate);\r\n    const { success } = userUpdateProfile;\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            navigation('/login');\r\n        }\r\n        else\r\n        {\r\n            if(!user || !user.name || success)\r\n            {\r\n                dispatch(userUpdateProfileSlice.actions.Reset());\r\n                dispatch(getUserDetail('profile'));\r\n            }\r\n            else\r\n            {\r\n                console.log(user.name, user.email)\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, navigation, userInfo, user, success]);\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match');\r\n        }\r\n        else{\r\n            setMessage('');\r\n            dispatch(updateUserProfile({\r\n                'id': user.id, \r\n                'name': name, \r\n                'email': email, \r\n                'password': password}));\r\n        }\r\n    }\r\n    const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n    const handleUpdateProfileClick = () => {\r\n        setShowPasswordFields(true);\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader/>}\r\n                {/* <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name' \r\n                            value={name} \r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter email' \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password'\r\n                            placeholder='Enter password' \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password'\r\n                            placeholder='Confirm password' \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update Profile</Button>\r\n                </Form> */}\r\n                \r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}