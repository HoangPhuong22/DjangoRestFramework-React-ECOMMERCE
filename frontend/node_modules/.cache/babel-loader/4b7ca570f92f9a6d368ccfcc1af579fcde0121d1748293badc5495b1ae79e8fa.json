{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { productDeleteSlice, productHomeSlice, productReviewSlice, productUpdateSlice, productTopSlice, productCreateSlice, productDetailSlice } from './reducers/productSlice';\nimport { cartSlice } from './reducers/cartSlice';\nimport { userListSlice, userUpdateProfileSlice, userDeleteSlice, userUpdateSlice, userLoginSlice, userRegisterSlice, userDetailSlice } from './reducers/userSlice';\nimport { orderListSlice, orderCreateSlice, orderDetailSlice, orderDeliverSlice, orderPaySlice, orderMyListSlice } from './reducers/orderSlice';\nconst store = configureStore({\n  reducer: {\n    productHome: productHomeSlice.reducer,\n    productDetail: productDetailSlice.reducer,\n    productDelete: productDeleteSlice.reducer,\n    productCreate: productCreateSlice.reducer,\n    productUpdate: productUpdateSlice.reducer,\n    productReviewCreate: productReviewSlice.reducer,\n    productTop: productTopSlice.reducer,\n    cart: cartSlice.reducer,\n    userLogin: userLoginSlice.reducer,\n    userRegister: userRegisterSlice.reducer,\n    userDetail: userDetailSlice.reducer,\n    userUpdate: userUpdateProfileSlice.reducer,\n    userList: userListSlice.reducer,\n    userDelete: userDeleteSlice.reducer,\n    userUpdate: userUpdateSlice.reducer,\n    orderCreate: orderCreateSlice.reducer,\n    orderDetail: orderDetailSlice.reducer,\n    orderPay: orderPaySlice.reducer,\n    orderMyList: orderMyListSlice.reducer,\n    orderList: orderListSlice.reducer,\n    orderDeliver: orderDeliverSlice.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  devTools: process.env.NODE_ENV !== 'production' // Kích hoạt Redux DevTools trong môi trường không phải production\n});\nexport default store;","map":{"version":3,"names":["configureStore","productDeleteSlice","productHomeSlice","productReviewSlice","productUpdateSlice","productTopSlice","productCreateSlice","productDetailSlice","cartSlice","userListSlice","userUpdateProfileSlice","userDeleteSlice","userUpdateSlice","userLoginSlice","userRegisterSlice","userDetailSlice","orderListSlice","orderCreateSlice","orderDetailSlice","orderDeliverSlice","orderPaySlice","orderMyListSlice","store","reducer","productHome","productDetail","productDelete","productCreate","productUpdate","productReviewCreate","productTop","cart","userLogin","userRegister","userDetail","userUpdate","userList","userDelete","orderCreate","orderDetail","orderPay","orderMyList","orderList","orderDeliver","middleware","getDefaultMiddleware","devTools","process","env","NODE_ENV"],"sources":["D:/Desktop/ecommerce2/frontend/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { productDeleteSlice, productHomeSlice, \r\n  productReviewSlice, productUpdateSlice, \r\n  productTopSlice, productCreateSlice, productDetailSlice } from './reducers/productSlice';\r\n\r\nimport { cartSlice } from './reducers/cartSlice';\r\n\r\nimport {userListSlice, userUpdateProfileSlice, userDeleteSlice ,\r\n  userUpdateSlice,  userLoginSlice, userRegisterSlice, userDetailSlice } from './reducers/userSlice';\r\n\r\n  import {orderListSlice, orderCreateSlice, orderDetailSlice, \r\n    orderDeliverSlice,  orderPaySlice, orderMyListSlice } from './reducers/orderSlice';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    productHome: productHomeSlice.reducer,\r\n    productDetail: productDetailSlice.reducer,\r\n    productDelete: productDeleteSlice.reducer,\r\n    productCreate: productCreateSlice.reducer,\r\n    productUpdate: productUpdateSlice.reducer,\r\n    productReviewCreate: productReviewSlice.reducer,\r\n    productTop : productTopSlice.reducer,\r\n    \r\n    cart: cartSlice.reducer,\r\n\r\n    userLogin: userLoginSlice.reducer,\r\n    userRegister: userRegisterSlice.reducer,\r\n    userDetail: userDetailSlice.reducer,\r\n    userUpdate: userUpdateProfileSlice.reducer,\r\n    userList: userListSlice.reducer,\r\n    userDelete: userDeleteSlice.reducer,\r\n    userUpdate: userUpdateSlice.reducer,\r\n\r\n    \r\n    orderCreate: orderCreateSlice.reducer,\r\n    orderDetail: orderDetailSlice.reducer,\r\n    orderPay: orderPaySlice.reducer,\r\n    orderMyList: orderMyListSlice.reducer,\r\n    orderList: orderListSlice.reducer,\r\n    orderDeliver: orderDeliverSlice.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n  devTools: process.env.NODE_ENV !== 'production', // Kích hoạt Redux DevTools trong môi trường không phải production\r\n});\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,kBAAkB,EAAEC,gBAAgB,EAC3CC,kBAAkB,EAAEC,kBAAkB,EACtCC,eAAe,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,yBAAyB;AAE1F,SAASC,SAAS,QAAQ,sBAAsB;AAEhD,SAAQC,aAAa,EAAEC,sBAAsB,EAAEC,eAAe,EAC5DC,eAAe,EAAGC,cAAc,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,sBAAsB;AAElG,SAAQC,cAAc,EAAEC,gBAAgB,EAAEC,gBAAgB,EACxDC,iBAAiB,EAAGC,aAAa,EAAEC,gBAAgB,QAAQ,uBAAuB;AAGtF,MAAMC,KAAK,GAAGtB,cAAc,CAAC;EAC3BuB,OAAO,EAAE;IACPC,WAAW,EAAEtB,gBAAgB,CAACqB,OAAO;IACrCE,aAAa,EAAElB,kBAAkB,CAACgB,OAAO;IACzCG,aAAa,EAAEzB,kBAAkB,CAACsB,OAAO;IACzCI,aAAa,EAAErB,kBAAkB,CAACiB,OAAO;IACzCK,aAAa,EAAExB,kBAAkB,CAACmB,OAAO;IACzCM,mBAAmB,EAAE1B,kBAAkB,CAACoB,OAAO;IAC/CO,UAAU,EAAGzB,eAAe,CAACkB,OAAO;IAEpCQ,IAAI,EAAEvB,SAAS,CAACe,OAAO;IAEvBS,SAAS,EAAEnB,cAAc,CAACU,OAAO;IACjCU,YAAY,EAAEnB,iBAAiB,CAACS,OAAO;IACvCW,UAAU,EAAEnB,eAAe,CAACQ,OAAO;IACnCY,UAAU,EAAEzB,sBAAsB,CAACa,OAAO;IAC1Ca,QAAQ,EAAE3B,aAAa,CAACc,OAAO;IAC/Bc,UAAU,EAAE1B,eAAe,CAACY,OAAO;IACnCY,UAAU,EAAEvB,eAAe,CAACW,OAAO;IAGnCe,WAAW,EAAErB,gBAAgB,CAACM,OAAO;IACrCgB,WAAW,EAAErB,gBAAgB,CAACK,OAAO;IACrCiB,QAAQ,EAAEpB,aAAa,CAACG,OAAO;IAC/BkB,WAAW,EAAEpB,gBAAgB,CAACE,OAAO;IACrCmB,SAAS,EAAE1B,cAAc,CAACO,OAAO;IACjCoB,YAAY,EAAExB,iBAAiB,CAACI;EAClC,CAAC;EACDqB,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC;EAC5DC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,CAAE;AACnD,CAAC,CAAC;AAEF,eAAe3B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}