{"ast":null,"code":"import { orderCreateSlice, orderDetailSlice, orderMyListSlice } from \"../reducers/orderSlice\";\nimport axios from 'axios';\nimport { orderPaySlice } from \"../reducers/orderSlice\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch(orderCreateSlice.actions.Request());\n    const userInfo = getState().userLogin.userInfo;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://127.0.0.1:8000/api/orders/add/', order, config);\n    dispatch(orderCreateSlice.actions.Success(data));\n  } catch (error) {\n    dispatch(orderCreateSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const getOrderDetail = id => async (dispatch, getState) => {\n  try {\n    dispatch(orderDetailSlice.actions.Request());\n    const userInfo = getState().userLogin.userInfo;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/orders/${id}/`, config);\n    dispatch(orderDetailSlice.actions.Success(data));\n  } catch (error) {\n    dispatch(orderDetailSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch(orderPaySlice.actions.Request());\n    const userInfo = getState().userLogin.userInfo;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/orders/${orderId}/pay/`, paymentResult, config);\n    dispatch(orderPaySlice.actions.Success(data));\n  } catch (error) {\n    dispatch(orderPaySlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch(orderMyListSlice.actions.Request());\n    const userInfo = getState().userLogin.userInfo;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/orders/myorders/`, config);\n    dispatch(orderMyListSlice.actions.Success(data));\n  } catch (error) {\n    dispatch(orderMyListSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\n  }\n};","map":{"version":3,"names":["orderCreateSlice","orderDetailSlice","orderMyListSlice","axios","orderPaySlice","createOrder","order","dispatch","getState","actions","Request","userInfo","userLogin","config","headers","Authorization","token","data","post","Success","error","Fail","response","detail","message","getOrderDetail","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"sources":["D:/Desktop/ECOMMERCE/frontend/src/actions/orderActions.js"],"sourcesContent":["import { orderCreateSlice, orderDetailSlice, orderMyListSlice } from \"../reducers/orderSlice\";\r\nimport axios from 'axios';\r\nimport { orderPaySlice } from \"../reducers/orderSlice\";\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(orderCreateSlice.actions.Request());\r\n        const userInfo = getState().userLogin.userInfo;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post('http://127.0.0.1:8000/api/orders/add/', order, config);\r\n        dispatch(orderCreateSlice.actions.Success(data));\r\n    } catch (error) {\r\n        dispatch(orderCreateSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\r\n    }\r\n}\r\nexport const getOrderDetail = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(orderDetailSlice.actions.Request());\r\n        const userInfo = getState().userLogin.userInfo;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`http://127.0.0.1:8000/api/orders/${id}/`, config);\r\n        dispatch(orderDetailSlice.actions.Success(data));\r\n    } catch (error) {\r\n        dispatch(orderDetailSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\r\n    }\r\n}\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(orderPaySlice.actions.Request());\r\n        const userInfo = getState().userLogin.userInfo;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`http://127.0.0.1:8000/api/orders/${orderId}/pay/`, paymentResult, config);\r\n        dispatch(orderPaySlice.actions.Success(data));\r\n    } catch (error) {\r\n        dispatch(orderPaySlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(orderMyListSlice.actions.Request());\r\n        const userInfo = getState().userLogin.userInfo;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`http://127.0.0.1:8000/api/orders/myorders/`, config);\r\n        dispatch(orderMyListSlice.actions.Success(data));\r\n    } catch (error) {\r\n        dispatch(orderMyListSlice.actions.Fail(error.response && error.response.data.detail ? error.response.data.detail : error.message));\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}