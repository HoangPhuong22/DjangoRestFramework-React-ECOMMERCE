{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { productDeleteSlice, productHomeSlice, productUpdateSlice, productCreateSlice, productDetailSlice } from './reducers/productSlice';\nimport { cartSlice } from './reducers/cartSlice';\nimport { userListSlice, userUpdateProfileSlice, userDeleteSlice, userUpdateSlice, userLoginSlice, userRegisterSlice, userDetailSlice } from './reducers/userSlice';\nimport { orderListSlice, orderCreateSlice, orderDetailSlice, orderDeliverSlice, orderPaySlice, orderMyListSlice } from './reducers/orderSlice';\nconst store = configureStore({\n  reducer: {\n    productHome: productHomeSlice.reducer,\n    productDetail: productDetailSlice.reducer,\n    productDelete: productDeleteSlice.reducer,\n    productCreate: productCreateSlice.reducer,\n    productUpdate: productUpdateSlice.reducer,\n    cart: cartSlice.reducer,\n    userLogin: userLoginSlice.reducer,\n    userRegister: userRegisterSlice.reducer,\n    userDetail: userDetailSlice.reducer,\n    userUpdate: userUpdateProfileSlice.reducer,\n    userList: userListSlice.reducer,\n    userDelete: userDeleteSlice.reducer,\n    userUpdate: userUpdateSlice.reducer,\n    orderCreate: orderCreateSlice.reducer,\n    orderDetail: orderDetailSlice.reducer,\n    orderPay: orderPaySlice.reducer,\n    orderMyList: orderMyListSlice.reducer,\n    orderList: orderListSlice.reducer,\n    orderDeliver: orderDeliverSlice.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  devTools: process.env.NODE_ENV !== 'production' // Kích hoạt Redux DevTools trong môi trường không phải production\n});\nexport default store;","map":{"version":3,"names":["configureStore","productDeleteSlice","productHomeSlice","productUpdateSlice","productCreateSlice","productDetailSlice","cartSlice","userListSlice","userUpdateProfileSlice","userDeleteSlice","userUpdateSlice","userLoginSlice","userRegisterSlice","userDetailSlice","orderListSlice","orderCreateSlice","orderDetailSlice","orderDeliverSlice","orderPaySlice","orderMyListSlice","store","reducer","productHome","productDetail","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetail","userUpdate","userList","userDelete","orderCreate","orderDetail","orderPay","orderMyList","orderList","orderDeliver","middleware","getDefaultMiddleware","devTools","process","env","NODE_ENV"],"sources":["D:/Desktop/ECOMMERCE/frontend/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { productDeleteSlice, productHomeSlice, \r\n  productUpdateSlice, productCreateSlice, productDetailSlice } from './reducers/productSlice';\r\n\r\nimport { cartSlice } from './reducers/cartSlice';\r\n\r\nimport {userListSlice, userUpdateProfileSlice, userDeleteSlice ,\r\n  userUpdateSlice,  userLoginSlice, userRegisterSlice, userDetailSlice } from './reducers/userSlice';\r\n\r\n  import {orderListSlice, orderCreateSlice, orderDetailSlice, \r\n    orderDeliverSlice,  orderPaySlice, orderMyListSlice } from './reducers/orderSlice';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    productHome: productHomeSlice.reducer,\r\n    productDetail: productDetailSlice.reducer,\r\n    productDelete: productDeleteSlice.reducer,\r\n    productCreate: productCreateSlice.reducer,\r\n    productUpdate: productUpdateSlice.reducer,\r\n    \r\n    cart: cartSlice.reducer,\r\n\r\n    userLogin: userLoginSlice.reducer,\r\n    userRegister: userRegisterSlice.reducer,\r\n    userDetail: userDetailSlice.reducer,\r\n    userUpdate: userUpdateProfileSlice.reducer,\r\n    userList: userListSlice.reducer,\r\n    userDelete: userDeleteSlice.reducer,\r\n    userUpdate: userUpdateSlice.reducer,\r\n\r\n    \r\n    orderCreate: orderCreateSlice.reducer,\r\n    orderDetail: orderDetailSlice.reducer,\r\n    orderPay: orderPaySlice.reducer,\r\n    orderMyList: orderMyListSlice.reducer,\r\n    orderList: orderListSlice.reducer,\r\n    orderDeliver: orderDeliverSlice.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n  devTools: process.env.NODE_ENV !== 'production', // Kích hoạt Redux DevTools trong môi trường không phải production\r\n});\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,kBAAkB,EAAEC,gBAAgB,EAC3CC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,yBAAyB;AAE7F,SAASC,SAAS,QAAQ,sBAAsB;AAEhD,SAAQC,aAAa,EAAEC,sBAAsB,EAAEC,eAAe,EAC5DC,eAAe,EAAGC,cAAc,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,sBAAsB;AAElG,SAAQC,cAAc,EAAEC,gBAAgB,EAAEC,gBAAgB,EACxDC,iBAAiB,EAAGC,aAAa,EAAEC,gBAAgB,QAAQ,uBAAuB;AAGtF,MAAMC,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAE;IACPC,WAAW,EAAEpB,gBAAgB,CAACmB,OAAO;IACrCE,aAAa,EAAElB,kBAAkB,CAACgB,OAAO;IACzCG,aAAa,EAAEvB,kBAAkB,CAACoB,OAAO;IACzCI,aAAa,EAAErB,kBAAkB,CAACiB,OAAO;IACzCK,aAAa,EAAEvB,kBAAkB,CAACkB,OAAO;IAEzCM,IAAI,EAAErB,SAAS,CAACe,OAAO;IAEvBO,SAAS,EAAEjB,cAAc,CAACU,OAAO;IACjCQ,YAAY,EAAEjB,iBAAiB,CAACS,OAAO;IACvCS,UAAU,EAAEjB,eAAe,CAACQ,OAAO;IACnCU,UAAU,EAAEvB,sBAAsB,CAACa,OAAO;IAC1CW,QAAQ,EAAEzB,aAAa,CAACc,OAAO;IAC/BY,UAAU,EAAExB,eAAe,CAACY,OAAO;IACnCU,UAAU,EAAErB,eAAe,CAACW,OAAO;IAGnCa,WAAW,EAAEnB,gBAAgB,CAACM,OAAO;IACrCc,WAAW,EAAEnB,gBAAgB,CAACK,OAAO;IACrCe,QAAQ,EAAElB,aAAa,CAACG,OAAO;IAC/BgB,WAAW,EAAElB,gBAAgB,CAACE,OAAO;IACrCiB,SAAS,EAAExB,cAAc,CAACO,OAAO;IACjCkB,YAAY,EAAEtB,iBAAiB,CAACI;EAClC,CAAC;EACDmB,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC;EAC5DC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,CAAE;AACnD,CAAC,CAAC;AAEF,eAAezB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}